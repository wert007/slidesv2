namespace Minsk.CodeAnalysis.Syntax
{
    public enum SyntaxKind
    {
        // Tokens
        BadToken,
        EndOfFileToken,
        WhitespaceToken,
        NumberToken,
        PlusToken,
        MinusToken,
        StarToken,
        SlashToken,
        BangToken,
        EqualsToken,
        TildeToken,
        HatToken,
		  SemicolonToken,
        AmpersandAmpersandToken,
        PipePipeToken,
        EqualsEqualsToken,
        BangEqualsToken,
        LessToken,
        LessOrEqualsToken,
        GreaterToken,
        GreaterOrEqualsToken,
        OpenParenthesisToken,
        CloseParenthesisToken,
        IdentifierToken,
		CommaToken,
		ColonToken,
		StringToken,
		OpenBracketToken,
		CloseBracketToken,
		PeriodToken,
		UnitToken,
		PipeToken,
		QuestionMarkToken,
		DollarSignToken,
		OpenBraceToken,
		CloseBraceToken,
		PercentToken,
		TimeToken,

        // Keywords
        FalseKeyword,
        LetKeyword,
        TrueKeyword,
		  ImportKeyword,
		  AsKeyword,
		  StyleKeyword,
		  EndStyleKeyword,
		  AnimationKeyword,
		  EndAnimationKeyword,
		  SlideKeyword,
		  EndSlideKeyword,
		  StepKeyword,
		  NewKeyword,
		  LibraryKeyword,
		  EndLibraryKeyword,
		  GroupKeyword,
		  EndGroupKeyword,
		  DataKeyword,
		  EndDataKeyword,
		StdKeyword,
		NoneKeyword,
		AnyKeyword,
		ForKeyword,
		InKeyword,
		EndForKeyword,
		IfKeyword,
		ElseKeyword,
		EndIfKeyword,
		CaseKeyword,

        // Nodes
        CompilationUnit,
		ElseClause,

		SyntaxTokenPair,

        // Statements
		FileBlockStatement,
		SlideStatement,
		ImportStatement,
        BlockStatement,
        VariableDeclaration,
        ExpressionStatement,
		ParameterBlockStatement,
		ParameterStatement,
		GroupStatement,
		ForStatement,
		SingleParameterStatement,
		StyleStatement,
		AnimationParameterStatement,
		AnimationStatement,
		LibraryStatement,
		DataBlockStatement,
		DataStatement,
		IfStatement,
		CaseBlockStatement,

        // Expressions
        LiteralExpression,
        NameExpression,
        UnaryExpression,
        BinaryExpression,
        ParenthesizedExpression,
        AssignmentExpression,
		FunctionExpression,
		IndexedArrayExpression,
		ArrayConstructorExpression,
		ConstructorExpression,
		VariableExpression,
		ArrayIndexExpression,
		MemberAccessExpression,
		FieldAccessExpression,
		FieldAssignmentExpression,
		StringExpression,
		StringInsertionExpression,
		StepStatement,
		SlashSlashToken,
		CommentToken,
		TypeDeclarationSyntax,
		TransitionKeyword,
		EndTransitionKeyword,
		TransitionParameter,
		TransitionStatement,
		PlusEqualsToken,
		MinusEqualsToken,
		StarEqualsToken,
		SlashEqualsToken,
		FilterKeyword,
		EndFilterKeyword,
		FilterStatement,
		TemplateKeyword,
		EndTemplateKeyword,
		TemplateStatement,
		PeriodPeriodToken,
		RangeToken,
		EqualsGreaterToken,
		LambdaExpression,
		HashMathKeyword,
		MathExpression,
	}
}